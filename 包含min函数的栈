'''
题目描述
定义栈的数据结构，请在该类型中实现一个能够得到栈最小元素的min函数。
'''
# -*- coding:utf-8 -*-
class Solution:
    def __init__(self):
        self.stack = []
        self.minStack = []
    def push(self, node):
        self.stack.append(node)
        if not self.minStack or node <= self.minStack[-1]:  #绝妙：完美解决了  3 4和 4 3 中最小值的问题，尤其是3 4 
            self.minStack.append(node)
    def pop(self):
        node = self.stack[-1]
        del self.stack[-1]
        if node == self.minStack[-1]:
            del self.minStack[-1]
        return node
    def top(self):
        return self.stack[-1]
    def min(self):
        return self.minStack[-1]
